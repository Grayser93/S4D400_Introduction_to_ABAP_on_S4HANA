
*A Simple Example of a Field String Defined Using the DATA Statement


* data: begin of totals_1,
*         region(15)    value 'unknown',
*         debits(15)   type p,
*         count        type i,
*        end of totals_1,
*       totals_2 like totals_1.
*
* totals_1-debits = 100.
* totals_1-count  = 10.
*
* totals_2-debits = 200.
* totals_2-REGION = 'NORTHAMERICA'.
*
* write: / totals_1-region, totals_1-debits, totals_1-count,
*        / totals_2-region, totals_2-debits, totals_2-count.


*A Field String Can Contain Another Field String


*data: begin of names,
*        name1  like kna1-name1,
*        name2  like kna1-name2,
*        gender type zdte_00_gender,
*      end of names.
*data: begin of cust_info,
*        number(10) type n,
*        nm         like names,         "like a field string
*      end of cust_info.
*
*cust_info-number   = 15.
*cust_info-nm-name1 = 'Jack'.
*cust_info-nm-name2 = 'Gordon'.
*cust_info-nm-gender = 'M'.
*
*write: / cust_info-number,
*         cust_info-nm-name1,
*         cust_info-nm-name2,
*         cust_info-nm-gender.


*A Field String Can Be Defined Exactly Like a DDIC Table or Structure


* data: my_emp like znc_emp_00.  "my_emp is our db table treated as
*                                "skeleton for creating FS in program
*
* my_emp-empid = 100.
* my_emp-empname = 'Anubhav'.
* my_emp-currency = 'USD'.
* my_emp-salary = 95000.
* my_emp-country = 'IN'.
*
* write: my_emp-empid,
*       / my_emp-empname  COLOR COL_GROUP,
*       / my_emp-salary   COLOR col_negative,
*       / my_emp-currency COLOR col_positive,
*       / my_emp-country  COLOR col_total.



*DDIC Tables and Structures Can also be Included in a Field String


* data    begin of fs1.
* include   structure znc_00_addr.
* data:     extra_field(3) type c,
*           end of fs1.
*
* fs1-street       = 'JFWTC Street'.
* fs1-city = 'NYC'.
* fs1-extra_field = 'xyz'.
*
* write: / fs1-street, fs1-city,
*          fs1-extra_field.


*If You Use LIKE Instead of INCLUDE, You Get a Different Result. The Names of the Included Fields Are Prefixed by an Intermediate Component Name.


* data: begin of fs1,
*         myaddr like znc_00_addr,
*         extra_field(3) type c,
*       end of fs1.
*
* fs1-myaddr-street  = 'Demo Street'.
* fs1-extra_field    = 'xyz'.
*
* write: / fs1-myaddr-street,
*          fs1-extra_field.

*An Example of Assignment Involving Two Field Strings


* data: begin of fs1,
*         c1 value 'A',
*         c2 value 'B',
*         c3 value 'C',
*         end of fs1,
*       fs2 like fs1.
*
* fs2 = fs1.
* fs2-c2 = 'D'.
* write: / fs2-c1, fs2-c2, fs2-c3.


*Simple Example of a Field String Defined Using the TABLES Statement

 "tables snwd_bpa.
 tables znc_emp_00.  ""using our table as skeleton

 znc_emp_00-empname = 'Bugsy'.
 znc_emp_00-country = 'US'.

 write:  znc_emp_00-empname, znc_emp_00-country.
